// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id             String        @id @default(cuid())
  userId         String
  organizationId String
  name           String
  email          String
  image          String?
  phone          String?
  level          String?
  preferredSport String?
  notes          String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  availability   Availability[]
  bookings       Booking[]

  @@index([userId])
  @@index([organizationId])
  @@map("profiles")
}


model Availability {
  id        String   @id @default(cuid())
  dayOfWeek String
  startTime String
  endTime   String
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([profileId, dayOfWeek, startTime, endTime])
  @@index([profileId])
  @@index([dayOfWeek])
  @@map("availability")
}


model Booking {
  id             String   @id @default(cuid())
  date           DateTime
  startTime      String
  endTime        String
  type           String
  status         String   @default("pending")
  profile        Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId      String
  organizationId String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([profileId])
  @@index([organizationId])
  @@index([date])
  @@map("bookings")
}

model Attendance {
  id             String   @id @default(cuid())
  organizationId String
  bookingId      String
  status         String   @default("pending")
  notes          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([organizationId])
  @@index([bookingId])
  @@map("attendances")
}
